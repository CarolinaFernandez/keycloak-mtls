server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name _;

    ssl_certificate /etc/nginx/auth/nginx.crt;
    ssl_certificate_key /etc/nginx/auth/nginx.key;
    ssl_verify_client optional_no_ca; # on;
    ssl_verify_depth 2;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    add_header X-Forwarded-For $remote_addr;
    add_header Host $host;
    add_header X-Forwarded-Host $host;
    add_header X-Forwarded-Port 443;
    add_header X-Forwarded-Proto $scheme;

    add_header X-Original-URI $request_uri;
    add_header X-Request-ID $request_id;
    add_header X-Real-IP $remote_addr;

    add_header ssl-client-cert $ssl_client_escaped_cert;
    add_header ssl-client-verify $ssl_client_verify;
    add_header ssl-client-subject-dn $ssl_client_s_dn;
    add_header ssl-client-issuer-dn $ssl_client_i_dn;

    add_header X-Client-Cert $ssl_client_escaped_cert;
    add_header SSL_CLIENT_CERT $ssl_client_escaped_cert;

    location / {

        port_in_redirect off;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header ssl-client-cert $ssl_client_escaped_cert;
        proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
        proxy_set_header ssl-client-verify $ssl_client_verify;
        proxy_set_header ssl-client-subject-dn $ssl_client_s_dn;
        proxy_set_header ssl-client-issuer-dn $ssl_client_i_dn;

        # Propagate the same headers that were received
        ## Ref: https://stackoverflow.com/questions/19751313/forward-request-headers-from-nginx-proxy-server
        proxy_pass_request_headers on;

        proxy_pass $scheme://$host:8443$request_uri;
        proxy_redirect off;
    }

    # Redirect towards the TLS endpoint
    return 301 $scheme://$host:8443$request_uri;
}
